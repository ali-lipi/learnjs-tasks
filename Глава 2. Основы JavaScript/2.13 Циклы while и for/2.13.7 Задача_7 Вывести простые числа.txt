¬ывести простые числа

важность: 3

Ќатуральное число, большее 1, называетс€ простым, если оно ни на что не делитс€, кроме себ€ и 1.

ƒругими словами, n > 1 Ц простое, если при его делении на любое число кроме 1 и n есть остаток.

Ќапример, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.

Ќапишите код, который выводит все простые числа из интервала от 2 до n.

ƒл€ n = 10 результат должен быть 2,3,5,7.

P.S.  од также должен легко модифицироватьс€ дл€ любых других интервалов.


–ешение:
'use strict'

let number = prompt('¬ведите число:');

next:
for (let i = 2; i <= number; i++) {

for (let j = 2; j < i; j++) {
if (i % j == 0) continue next;
}

alert(i);
}


ѕримечание (решение из учебника):

—уществует множество алгоритмов решени€ этой задачи.

ƒавайте воспользуемс€ вложенными циклами:

ƒл€ всех i от 1 до 10 {
  проверить, делитс€ ли число i на какое-либо из чисел до него
  если делитс€, то это i не подходит, берЄм следующее
  если не делитс€, то i - простое число
}
–ешение с использованием метки:

let n = 10;

nextPrime:
for (let i = 2; i <= n; i++) { // ƒл€ всех i...

  for (let j = 2; j < i; j++) { // проверить, делитс€ ли число..
    if (i % j == 0) continue nextPrime; // не подходит, берЄм следующее
  }

  alert( i ); // простое число
}

 онечно же, его можно оптимизировать с точки зрени€ производительности. Ќапример, провер€ть все j не от 2 до i, а от 2 до квадратного корн€ из i. ј дл€ очень больших чисел Ц существуют более эффективные специализированные алгоритмы проверки простоты числа, например квадратичное решето и решето числового пол€.